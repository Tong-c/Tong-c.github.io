<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 无尽光芒</title>
    <link>https://example.com/posts/</link>
    <description>Recent content in Posts on 无尽光芒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 15 Jul 2019 20:46:29 +0800</lastBuildDate>
    
	<atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>序列化对单例模式的破坏</title>
      <link>https://example.com/posts/%E5%BA%8F%E5%88%97%E5%8C%96%E5%AF%B9%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%A0%B4%E5%9D%8F/</link>
      <pubDate>Mon, 15 Jul 2019 20:46:29 +0800</pubDate>
      
      <guid>https://example.com/posts/%E5%BA%8F%E5%88%97%E5%8C%96%E5%AF%B9%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%A0%B4%E5%9D%8F/</guid>
      <description>单例模式举例 单例模式举例，代码如下 public class Singleton { private Singleton() { } public static Singleton getInstance() { return SingleHolder.singleton; } private static class SingleHolder { private static final Singleton singleton = new Singleton(); } } 正常对象的获取，可以保持对象的单例存在 Singleton instance1 = Singleton.getInstance(); Singleton instance2 = Singleton.getInstance(); System.out.println(instance1 == instance2); //输出true 序列化对单例的破坏 代码如下 package</description>
    </item>
    
    <item>
      <title>如此复杂</title>
      <link>https://example.com/posts/%E5%A6%82%E6%AD%A4%E5%A4%8D%E6%9D%82/</link>
      <pubDate>Tue, 30 Apr 2019 20:42:18 +0800</pubDate>
      
      <guid>https://example.com/posts/%E5%A6%82%E6%AD%A4%E5%A4%8D%E6%9D%82/</guid>
      <description>从未如此复杂过， 后悔、遗憾、嫉妒、悲伤、愤怒、 每天每时每刻， 在各种情绪里煎熬。 可这些情绪加起来， 是痛苦。</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://example.com/posts/first-post/</link>
      <pubDate>Thu, 18 Apr 2019 09:21:37 +0800</pubDate>
      
      <guid>https://example.com/posts/first-post/</guid>
      <description>Hugo博客搭建测试。</description>
    </item>
    
  </channel>
</rss>